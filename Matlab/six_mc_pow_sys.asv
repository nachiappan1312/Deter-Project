clc;clear all;
close all;

% Machine Parameters
M1 = 1;M2 = 1;M3 = 1;M4 = 2;M5 = 2;M6 = 2;
E1 = 1;E2 = 1;E3 = 1;E4 = 1;E5 = 1;E6 = 1;

%Transmission line parameters
x12=.01;x23=.01;x31=.01;
x45=0.05;x64=0.05;x56=0.05;
x26 = 0.05;


M = diag([M1,M2,M3,M4,M5,M6]);
x12=.01;x23=.01;x31=.01;
x45=0.05;x64=0.05;x56=0.05;
x26 = 0.05;
x = [0 0.01 0.01 0 0 0;0.01 0 0.01 0 0 0.05;0.01 0.01 0 0 0 0;0 0 0 0 0.05 0.05;0 0 0 0.05 0 0.05; 0 0.05 0 0.05 0.05 0];
del10 = 0.1;del20 = 0.11;del30 = 0.105;del40 = 0.21;del50 = 0.205;del60 = 0.211;
del = [0.1 0.11 0.105 0.21 0.205 0.211];

d1=0;%0.5;
d2=0;%0.5;
d3=0;%0.5;
d4=0;%0.8;
d5=0;%0.8;
d6=0;%0.8

D = diag([d1,d2,d3,d4,d5,d6]);

T =[0 1 1 0 0 0; 1 0 1 0 0 1;1 1 0 0 0 0;0 0 0 0 1 1;0 0 0 1 0 1;0 1 0 1 1 0];
%Construct Laplacian
L = zeros(6,6);
for i = 1:6
    for j = 1:6
        if (T(i,j) ==1)
            if(i~=j)
              L(i,j) = cos(del(i)-del(j))/x(i,j);                   
            end
        else
           L(i,j) = 0;
        end
    end
end

for i = 1:6
    for j= 1:6
        if(i~=j)
            L(i,i) = L(i,i)-L(i,j);
        end
    end
end

Z = zeros(6,6);
I = eye(6,6);

%Construct continous time state space 
A = [Z I; inv(M)*L inv(M)*D];
B = [Z;I];
C = zeros(1,12);
C(1,9) = 1;
D = 0;

sys = ss(A,B,C,D);

%Design the Discrete time state space
% 
Ts = 0.01 %sampling time
h = 0.003 %network propogation delay threshold

% sys_d = c2d(sys,Ts);
% 
% impulse(sys_d)
% 
% Q = eye(12,12);
% R = eye(6,6);
% [K] = dlqr(sys_d.a,sys_d.b,Q,R);
% 
%  time = 0:0.1:2;
%  
% s = size(time);
% x =zeros(12,s(2)+1);
% x0 = [del';zeros(6,1)];
% x(:,1) = x0;
% for k = 2:s(2)
%     x(:,k+1) = (sys_d.a - sys_d.b*K)*x(:,k);
% end
% x = x(6,1:s(2));
% plot(time,x)

Ad = expm(A*Ts);
sys_d = c2d(sys,Ts,'zoh');
Ad = sys.a;Bd = sys.b;

efun = @(t)expm(A*t)*B;
Bd1 = integral(efun,0,h,'ArrayValued',true);
Bd2 = integral(efun,h,Ts,'ArrayValued',true);

Z1 = zeros(6,12); Z2 = zeros(6,6);
Af = [A Bd2 ; Z1 Z2]; 
Bf = [Bd1; eye(6,6)];
%DLQR Parameters
Q1 = 10*eye(12,12); Q2 = zeros(12,6); Q3 = zeros(6,12); Q4 = 100*eye(6,6)

Q = [Q1 Q2;Q3 Q4];
R = 100*eye(6,6);

[K] = vpa(dlqr(Af,Bf,Q,R),2)

time = 0:0.01:2;

s = size(time);
z =zeros(18,s(2)+1);
z0 = [del';zeros(6,1);zeros(6,1)];
z(:,1) = z0;
for k = 1:s(2)
    u = -K*z(:,k);
    for j = 1:6
        if u>0.5
            
    z(:,k+1) = (Af-Bf*K)*z(:,k);
end

plot(time,z(1:12,1:s(2)))



